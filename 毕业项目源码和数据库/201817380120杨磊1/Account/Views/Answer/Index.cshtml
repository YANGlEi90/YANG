
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutExam.cshtml";
}

@using Account.Models;
@model Answer

<h2>在线考试</h2>

<table>
    <tr>
        <td>
            <h4>试卷描述：</h4><hr />
            试卷名称：@Model.Paper.PaperName<br />
            试卷介绍：@Model.Paper.PaperExplain<br />
            试卷时长：@Model.Paper.PaperTime<br />
        </td>
        <td>
            <h4>考生信息：</h4><hr />
            学生姓名：@Model.Student.StuName <br />
            学生班级：@Model.Student.StuGrade<br />

            <br />
        </td>
    </tr>
</table>

@{ 
    int topicnum = 1; //第几题
    string topicflag = "topic";
    int num = 1;
    string flag = "flag";//锚点
}
<div>
    <fieldset>
        <legend>试卷内容</legend>
        <ul style="list-style:inside;">
            @foreach (var item in Model.Paper.Topic.OrderBy(p => p.TopicSort))
            {
                <li style="padding:20px;">
                    @*<a name=""></a> 锚点所在的位置*@
                    <span>第 @topicnum 题<a name="@flag@item.TopicID"></a></span>

                    <span style="font-weight:bold"> @item.TopicExplain</span> @item.TopicScore

                    <ul style="padding-left:30px;">
                        @if (item.TopicType == 1)
                        {
                            <li><input type="radio" name="@topicflag@item.TopicID" value="A" nameFlag="checkstate" />A. @item.TopicA </li>
                            <li><input type="radio" name="@topicflag@item.TopicID" value="B" nameFlag="checkstate" />B. @item.TopicB</li>
                            <li><input type="radio" name="@topicflag@item.TopicID" value="C" nameFlag="checkstate" />C. @item.TopicC</li>
                            <li><input type="radio" name="@topicflag@item.TopicID" value="D" nameFlag="checkstate" />D. @item.TopicD</li>
                        }
                        else if (item.TopicType == 2)
                        {
                            <li><input type="radio" name="@topicflag@item.TopicID" value="正确" nameFlag="checkstate" />@item.TopicA</li>
                            <li><input type="radio" name="@topicflag@item.TopicID" value="错误" nameFlag="checkstate" />@item.TopicB</li>
                        }
                        else
                        {
                            <li><textarea name="@topicflag@item.TopicID" clos="100" rows="5" nameFlag="checkstate"></textarea></li>
                        }

                    </ul>
                </li>
                topicnum++;
            }
        </ul>
    </fieldset>
    @*----悬浮框-----*@
    <div class="flex">
        <div class="showFlag">
            <span>已作答<span class="AnsweredFlag"></span></span><span>未作答<span class="NotAnswerFlag"></span></span>
        </div>
        <hr />
        <ul>
            @foreach (var topic in Model.Paper.Topic)
            {
                <li><a href="#@flag@topic.TopicID" id="@topic.TopicID">@num</a></li>
                num++;
            }

        </ul>
        <hr />
        <div>
            <a href="/Answer/SubmitPaper?AnswerID=@Model.AnswerID" class="submit" onclick="return confirm('确定交卷吗？')">交卷</a><br />
        </div>
    </div>
</div>

@section scripts{
    <script>
        //当答题选项发生改变的时候触发，通过属性过滤器
        $("[nameFlag='checkstate']").change(function () {
            //获得当前点击的value值
           var DetailAnswer= $(this).val();

            //获得name属性的值
          var nameValue= $(this).attr("name");
            //name属性的值中获得topic的主键
          var topicID=  nameValue.replace(/[^0-9]/ig,"");
            //给对应的浮空编号，添色
            $("#" + topicID).addClass("Answered");
            //将答案提交到控制器ajax
            $.ajax({
                type: "post",
                url: "/Answer/Index",
                data: {
                    AnswerID:@Model.AnswerID,
                    TopicID: topicID,
                    DetailAnswer: DetailAnswer
                }
            });

        })

    </script>
    
    
}

@*----悬浮框样式-----*@
<style>
    ul{
        list-style:none;
    }
    .showFlag {
        line-height: 40px;
    }

    .NotAnswerFlag {
        border: 1px solid #000000;
        width: 15px;
        height: 15px;
        display: inline-block;
    }

    .AnsweredFlag {
        color: white;
        background-color: #139ee5;
        width: 15px;
        height: 15px;
        display: inline-block;
    }

    .flex {
        position: fixed;
        border: 1px solid gray;
        right: 20%;
        top: 50%;
        opacity: 0.8;
        width: 210px;
        border-radius: 5px;
        background-color: #d7d6d6;
    }

        .flex ul {
          
            display: flex;
            flex-wrap: wrap;
            justify-content: flex-start;
        }

            .flex ul li {
                padding: 0px;
            }

                .flex ul li a {
                    width: 35px;
                    height: 35px;
                    border-radius: 3px;
                    border: 1px solid #000000;
                    margin: 2px;
                    text-align: center;
                    line-height: 35px;
                    display: block;
                }

    .NotAnswer {
        background-color: #ffffff;
        border: 1px solid #000000;
    }

    .Answered {
        color: white;
        background-color: #139ee5;
    }

    .submit {
        margin: 5px auto;
        border-radius: 5px;
        text-align: center;
        display: block;
        width: 50px;
        height: 30px;
        line-height: 30px;
        padding: 3px 5px;
        background-color: #f53917;
        color: white;
    }

        .submit:hover {
            background-color: red;
            color: white;
        }
</style>

